> Vue Router
sebuah package yang memungkinkan untuk membuat link navigasi dan memudahkan dalam perpindahan halaman 
Single page aplication (membuat aplikasi sederhana dengan konsep satu halaman) dengan bantuan package Router

> Membuat Single Page Application (SPA)
secara sederhana tatacara pembuatan SPA ada di dokumentasi router Vue js
perlu di perhatika bahwa pada file component.html masih menggunakan framework Vue.js model 2 tahun lalu
sehingga pembuatan SPA menggunakan router terbaru akan menimbulkan error
sehingga di buat file baru router.html untuk menyesuaikan framework Vue.js terupdate dengan router vueJs
perbedaan versi 2 tahun yang lalu dengan model terupdate ada pada pendefinisian root vue-nya
> history mode
property tambahan router yang memungkinkan kit auntuk mengakses web page vue melalui local host
> penyelesaian SPA 
pada file router.html, tambahan codingan setelah penambahan histpry mode, adalah mengupdate sistem input menggunakan form dan submit button, untuk menambahkan data array kelas yang telah di defisikan secara global, serta menginput gambar, menampilkan dan mengambil datanya.
> halaman 404
halam ini berguna untuk menampilkan informasi error ketika user mengakses router yang salah
> fitur validation
menambahkan syarat agar input form harus di isi bisa menggunakan metode javascript seperti yang ada di dalam file router.html pada component kelas function submitInput.
> local storage
tempat penyimpanan bawaan browser, dapat di akses dengan syntax menambahkan item
                    localStorage.setItem('kelas', JSON.stringify(this.kelas))
dengan dua parameter, pertama nama untuk localstoragenya, kedua nilai yang akan di upload.

selanjutnya untuk menggunakan localStorage ini kita dapat menggunakan syntax mendapatkan item 
                this.kelas = JSON.parse(localStorage.getItem('kelas')) || []
perlu diperhatikan data dari localStorage masih berbentuk JSON jadi kita perlu menambahkan syntax JSON.parce(), untuk mengubahnya menjadi object
> Lifecycle Diagram
didokumentasi VueJs kita dapat mempelajari Lifecycle Diagram untuk memahami aplikasi yg kita buat menggunakan vueJs
> menambahakan sweetalert
untuk memberikan informasi ketika data di submit. 
untuk notifikasi bawaan javascript, kita dapat menggunakan alert method
untuk notifikasi yang bagus kita dapat mengakses web sweetalert, dan menggunakan swal method.
> menghapus data di localstorage
kita dapat menghapus menggunakan function hapus data yang telah dibuat diawal materi
akan tetapi function tersebut masih belum mempengaruhi localstorage
oleh karena itu setiap unction hapus data dipanggil, maka kita perlu mengupgrade localstorage sesuai dengan kondisi terbaru
maka cukup dengan menambahkan 
                    localStorage.setItem('kelas', JSON.stringify(this.kelas))
maka setiap kali data di hapus localstorage juga akan otomatis terupgrade
>Lifecycle Hooks (siklus Hidup)
pada web Vue.js, buka Guide/The Vue Instance/Instance Lifecycle Hooks
jenis-jenis Lifecycle didalam Vuejs, created, mounted, updated, destroyed
ada dua metode ketika vue ingin menjalankan sebuah Lifecycle, yaitu mencari el pada const app = Vue.createApp({}) 
atau mencari el melalui $mount(el) dimana metode ini digunakan ketika menggunakan vueCLI <=> el = id pada element/tag div induk/parent

